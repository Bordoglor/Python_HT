#Крестики-нолики 3 на 3
import random

X, O = 'x', 'o'
W = 0
L = 0
sym = []
field = [' ']*9

def create_field(f):
    for i in range(len(f)):
        if (i)%3==2:
            print(f[i], end='.\n')
        else:
            print(f[i], end='.')
            

def interface(intf):
    print('\n')
    for i in range(9):
        if (i+1)%3==0:
            print(i+1, end='\n')
        else:
            print(i+1, end=' ')
            

def win(pos, sym):
    if pos[1]==pos[2]==pos[0]==sym:
        return True
    if pos[4]==pos[5]==pos[3]==sym:
        return True
    if pos[7]==pos[8]==pos[6]==sym:
        return True
    if pos[1]==pos[4]==pos[7]==sym:
        return True
    if pos[2]==pos[5]==pos[8]==sym:
        return True
    if pos[3]==pos[6]==pos[0]==sym:
        return True
    if pos[0]==pos[4]==pos[8]==sym:
        return True
    if pos[2]==pos[4]==pos[6]==sym:
        return True
    else:
        return False #рандом победил

def full(pos):
    t = 0
    if not pos[1]==' ' and not pos[2]==' ' and not pos[3]==' '\
        and not pos[4] ==' ' and not pos[5]==' ' and not pos[6]==' '\
        and not pos[7]==' ' and not pos[8]==' ' and not pos[0]==' ':
            return
        
def role(sym):
    if sym == 'x':
        return 'o'
    else:
        return 'x'
    
def comp_step(f, sym):
    while(True):
        opponent = random.randint(0,8)
        if (f[opponent]=='x' or f[opponent]=='o'):
            continue
        else:
            f[opponent] = role(sym)
            return
    
def steps(f, turn, sym):
    while(not win(f, sym) and not win(f, sym) and not full(f)):
        if turn==False:
            comp_step(f, sym)
            turn = True
        else:
            if turn==True:
                step(f, sym)
                turn = False
    if win(f, sym):
        print("You won!\n")
        global W
        W+=1
        return
    if win(f, role(sym)):
        print("You lost :c\n")
        global L
        L+=1
        return
    if full(field):
        print("Draw :c")
        return
    
def step(f, role):
    print("\nYour turn!")
    while(True):
        create_field(f)
        interface(f)
        target = int(input())
        if (target<1 or target>9):
            print("Try again")
            continue
        elif (f[target-1]=='x' or f[target-1]=='o'):
                print("Try again")
                continue
        else:
            f[target-1] = role
            return


        
def game():
    while(True):
        global sym
        if (W+L==0):
            #global sym
            print("Score:", W, ":", L, "\n", "Press o to play by noughts," "\n",
                                                "Press x to play by crosses", '\n' ,
                                                "Press ex to exit")
            sym = input()
        else:
            #global sym
            sym = role(sym)
        if sym=='ex':
            return 0
        elif sym=='x':
                crnt_field = field[:]
                steps(crnt_field, True, 'x')
        elif sym=='o':
                crnt_field = field[:]
                steps(crnt_field, False, 'o')
        else:
            print("Repeat that please! ._. \n")
            continue
        print("Play again?[y/n]")
        if input()=='n':
            return 0

game()
